#pragma once
#include <cstdint>

namespace kopinions {
enum key_id : uint8_t {
  NONE,
  // modifier
  FN,
  CTRL,
  SHIFT,
  ALT,
  GUI,
  LCTRL = CTRL,
  LSHIFT = SHIFT,
  LALT = ALT,
  LGUI = GUI,
  RCTRL,
  RSHIFT,
  RALT,
  RGUI,
  // key
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,
  K0,
  K1,
  K2,
  K3,
  K4,
  K5,
  K6,
  K7,
  K8,
  K9,
  ENTER,
  ESC,
  BACKSPACE,
  TAB,
  SPACE,
  MINUS,
  EQUAL,
  LBRACE,
  RBRACE,
  BACKSLASH,
  NON_US_NUM,
  SEMICOLON,
  QUOTE,
  TILDE,
  COMMA,
  PERIOD,
  SLASH,
  CAPS_LOCK,
  // functional key
  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  F13,
  F14,
  F15,
  F16,
  F17,
  F18,
  F19,
  F20,
  F21,
  F22,
  F23,
  F24,
  PRINTSCREEN,
  SCROLL_LOCK,
  PAUSE_BREAK,
  INSERT,
  HOME,
  PAGE_UP,
  DELETE,
  END,
  PAGE_DOWN,
  RIGHT,
  LEFT,
  DOWN,
  UP,
  NUM_LOCK,
  MENU,
  // num pads
  PAD_SLASH,
  PAD_ASTERIX,
  PAD_MINUS,
  PAD_PLUS,
  PAD_ENTER,
  PAD_1,
  PAD_2,
  PAD_3,
  PAD_4,
  PAD_5,
  PAD_6,
  PAD_7,
  PAD_8,
  PAD_9,
  PAD_0,
  PAD_PERIOD,
  PAD_NON_US_NUM,
  // media key
  PLAY,
  PAUSE,
  RECORD,
  FAST_FORWARD,
  REWIND,
  NEXT_TRACK,
  PREV_TRACK,
  STOP,
  EJECT,
  RANDOM_PLAY,
  PLAY_PAUSE,
  PLAY_SKIP,
  MUTE,
  VOLUME_INC,
  VOLUME_DEC,
  // system key
  POWER_DOWN,
  SLEEP,
  WAKE_UP,
};

struct key {
  using identification = key_id;

  enum class status { RELEASED, PRESSED };

  enum class type { MEDIA, MODIFIER, PAD, SYSTEM };

  identification id;
  status sts;
};
}  // namespace kopinions
